<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mingzi.li blog</title><link>http://qiaomingzi.github.io/</link><description>Recent content on mingzi.li blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 20 Mar 2022 15:42:33 +0000</lastBuildDate><atom:link href="http://qiaomingzi.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>jemeter基本使用</title><link>http://qiaomingzi.github.io/jemeter%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 20 Mar 2022 15:42:33 +0000</pubDate><guid>http://qiaomingzi.github.io/jemeter%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</guid><description>一：参考 [jemeter] https://jmeter.apache.org/
二：概要 三：jemeter使用 3.1 启动 1）配置 jemeter/bin/setenv.bat set JVM_ARGS=-Xms1024m -Xmx1024m -Dpropname=value 2)启动方式 jmeter.bat run JMeter (in GUI mode by default) jmeterw.</description></item><item><title>&lt;&lt;大风歌>>王立群</title><link>http://qiaomingzi.github.io/%E5%A4%A7%E9%A3%8E%E6%AD%8C%E7%8E%8B%E7%AB%8B%E7%BE%A4/</link><pubDate>Sat, 19 Mar 2022 09:42:33 +0000</pubDate><guid>http://qiaomingzi.github.io/%E5%A4%A7%E9%A3%8E%E6%AD%8C%E7%8E%8B%E7%AB%8B%E7%BE%A4/</guid><description>&amp;laquo;大风歌&amp;raquo;王立群 大风歌 歌手: 极泷 望华车 市井夺未央 尘沙起 鸿门巧对王 纳贤良 无畏得天下 三章法 垓下定汉疆 大风起兮云飞扬 威加海内兮归故乡 安得猛士兮守四方 大风起兮云飞扬 威加海内兮归故乡 安得猛士兮守四方 守四方 55期：传奇皇帝 公元前202年从山东定陶的一个土台上，一位五十五岁的中年男子，在群臣的欢呼声中，戴上了皇帝冠冕，他就是大汉王朝的开国皇帝刘邦，一个开创了从布衣到皇帝的神话，三年鏖战 摧毁强秦，四载奋斗 战胜项羽，创建了延续400多年的大汉王朝，然而这位不读书的皇帝,却写下了一首大气蓬勃的&amp;laquo;大风歌&amp;raquo;。</description></item><item><title>位运算基础知识</title><link>http://qiaomingzi.github.io/%E4%BD%8D%E8%BF%90%E7%AE%97%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link><pubDate>Wed, 16 Mar 2022 15:42:33 +0000</pubDate><guid>http://qiaomingzi.github.io/%E4%BD%8D%E8%BF%90%E7%AE%97%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid><description>一：参考 [算法心得] http://graphics.stanford.edu/~seander/bithacks.html#IntegerLogIEEE64Float
[运算符优先级] https://tool.oschina.net/commons?type=6
[位运算技巧] https://www.zhihu.com/question/38206659
[思考题解法] https://www.iteye.com/blog/yacare-1969931
二：概要 通过本文可以让我们温习下位运算、进制转换，为写出更精良的代码奠定理论基础。现在我们从一个题目说开去：
问：如何载预计有10亿个int的数据中，剔除其中重复的数据并排序输出?
分析：首先要进行排序、排重必须得把相关数据加载到内存中，那么要用哪种数据结构来存储呢?
10 0000 0000 = 10^9
int[10^9] 需要内存 10^9 * 4(B) =&amp;gt; ((10^9 * 4)/1000 * 1000)(M) =&amp;gt; 4000M =&amp;gt; 4GB</description></item><item><title>canal-mysql binlog日志解析</title><link>http://qiaomingzi.github.io/canal-mysql-binlog%E6%97%A5%E5%BF%97%E8%A7%A3%E6%9E%90/</link><pubDate>Sat, 16 Oct 2021 15:42:33 +0000</pubDate><guid>http://qiaomingzi.github.io/canal-mysql-binlog%E6%97%A5%E5%BF%97%E8%A7%A3%E6%9E%90/</guid><description>1.参考 【alibaba canal】https://github.com/alibaba/canal
【mysql binlog】https://dev.mysql.com/doc/refman/8.0/en/binary-log.html
【mysql event】https://dev.mysql.com/doc/internals/en/event-meanings.html
【mysqlbinlog 命令】https://dev.mysql.com/doc/refman/8.0/en/mysqlbinlog.html
2.基本简介 canal [kə&amp;rsquo;næl]，译意为水道/管道/沟渠，主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费
2.1 mysql主备复制实现 master将改变记录到二进制日志(binary log)中（这些记录叫做二进制日志事件，binary log events，可以通过show binlog events进行查看）； slave将master的binary log events拷贝到它的中继日志(relay log)； slave重做中继日志中的事件，将改变反映它自己的数据。 2.</description></item><item><title>GO 36讲</title><link>http://qiaomingzi.github.io/go-36%E8%AE%B2/</link><pubDate>Sat, 16 Oct 2021 15:42:33 +0000</pubDate><guid>http://qiaomingzi.github.io/go-36%E8%AE%B2/</guid><description>1.参考 【环境设置】https://www.liwenzhou.com/posts/Go/install_go_dev_old/
2.基本简介 3.问题 1）Main file has non-main package or doesn&amp;rsquo;t contain main function 如果为程序入口的main方法文件，则包应为package main,注意与目录无关。</description></item><item><title>maven-wrapper基础使用</title><link>http://qiaomingzi.github.io/maven-wrapper%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 16 Oct 2021 15:42:33 +0000</pubDate><guid>http://qiaomingzi.github.io/maven-wrapper%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</guid><description>1.maven-wrapper安装使用 安装 在项目中使用命令安装mvn -N io.takari:maven:0.7.7:wrapper，参考官网 ,如果需要指定maven版本则使用mvn -N io.takari:maven:0.7.7:wrapper -Dmaven=3.5.4,安装完成后，目录如下
my-project ├── .mvn │ └── wrapper │ ├── MavenWrapperDownloader.java │ ├── maven-wrapper.</description></item><item><title>mysql master-slave</title><link>http://qiaomingzi.github.io/mysql-master-slave/</link><pubDate>Sat, 16 Oct 2021 15:42:33 +0000</pubDate><guid>http://qiaomingzi.github.io/mysql-master-slave/</guid><description>1.参考 【mysql8.0手册】https://dev.mysql.com/doc/refman/8.0/en/
【mysql doc】https://dev.mysql.com/doc/
【alibaba canal】https://github.com/alibaba/canal
2.概要 通过本文可以了解主从同步原理，快速搭建一个主从环境,实现复制场景，并且利用canal实现订阅binglog日志，实现跨实例同步。
中间件版本:
mysql-8.0.27
canal 1.1.5
3.主从同步 创建容错系统的最常见方法就是冗余，复制模式分普通复制、组复制，普通复制即传统的 MySQL复制 提供了一种简单的源(mater)到副本复制方法,。
master-slave syn MySQL 复制功能允许服务器 -主服务器 - 将所有更改发送到另一台服务器 -从服务器 -从服务器尝试应用所有更改以与主服务器保持同步。复制工作如下：</description></item><item><title>sonarqube基础使用</title><link>http://qiaomingzi.github.io/sonarqube%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 16 Oct 2021 15:42:33 +0000</pubDate><guid>http://qiaomingzi.github.io/sonarqube%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</guid><description/></item><item><title>Yarn相关</title><link>http://qiaomingzi.github.io/yarn%E7%9B%B8%E5%85%B3/</link><pubDate>Thu, 27 May 2021 09:46:19 +0800</pubDate><guid>http://qiaomingzi.github.io/yarn%E7%9B%B8%E5%85%B3/</guid><description>1.概述 Yarn是您的代码的包管理器，yarn和npm的对比
速度
npm 是按照队列执行每个 package，也就是说必须要等到当前 package 安装完成之后，才能继续后面的安装。而 Yarn 是同步执行所有任务，提高了性能。
安装版本统一
更简洁的输出
参考：</description></item><item><title>GO学习</title><link>http://qiaomingzi.github.io/go%E5%AD%A6%E4%B9%A0/</link><pubDate>Tue, 25 May 2021 09:34:28 +0800</pubDate><guid>http://qiaomingzi.github.io/go%E5%AD%A6%E4%B9%A0/</guid><description>相关链接 https://github.com/golang 源码 https://golang.org/ref/mod 官方文档 https://golang.org/doc/code.html#Workspaces http://www.flysnow.org/categories/Golang/ go专栏 https://golanglibs.com/top 流行的GO应用和GO库 https://gitee.com/pengzhile/ide-eval-resetterv GoLand试用更新插件 一：读书笔记 Limbo语言被认为是Go语言的前身,Limbo语言中继承了众多优秀的特性。包括肯·汤普逊在内的Plan 9项目原班人马加入了Google。在Google，他们创造了Go语言，Google是Go语言的主推。
学习书籍
《GO并发编程实战 第2版》《Go****语言核心编程》《Go语言高级编程》《Go Web编程》
初识GO语言 1.</description></item></channel></rss>